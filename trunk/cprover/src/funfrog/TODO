
TODO list for funfrog
=====================

HIGH PRIORITY
-------------

- PINCETTE stuff: xml-interface for output
- Upgrade check: optimize upward propagation (in case of multiple changes, change the root of common subtree), e.g. for 12_upg_simple_ref/change_15.c
- Repair slicing for upgrade check (e.g. 12_upg_simple_ref/change_13.c doesn't work without "--no-slicing")

LOW PRIORITY
------------

- Refinement: callstart symbols analysis for havoced partitions
- Conversion: phi-functions profiling
- Interactive mode of:
  - OpenSMT session - share one instance during checking of a single assertion
- Mapping for global variables, refactor:
  - unify accessed globals and arguments
  - unify modified globals and return value (the extra temp. variable is probably not needed - check it!).
- Aliasing
- UFLIA encoding
  - choose solver, create wrapper, interpolant back propagation
- Bit-vectors encoding
  - examine wolverine's interpolation engine


BUGS
----

- Not all accesses to global variables are detected in function_info.cpp (set DEBUG_GLOBALS on McMillan's examples!)
- Too many symbols in the renaming tables (remove locals and the special call start and call end symbols)
- Slicing can remove "unrelated" assumptions that, however, make an error reaching trace unfeasible (thus reporting a nonexistent error).
- Error trace computation is broken - segfault on trace computation (not addapted to partitioning symex target yet)
- Unsufficient loop unwinding (k times, if there are loops with n>k iterations) leads to "assertion is trivially unreachable" if the assertion is in the same function, or to SAT if the loop is separated to different function.
- "--unwind n" in fact unwinds (n-1) times. The bug came from cbmc..

BUGGY TEST CASES:
----------------
13_upg_simple_holds/change19.c: (l.var_no()=2147483646 _no_variables=1052) Segm. fault in command line, but OK in Eclipse.
